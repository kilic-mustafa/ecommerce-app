
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Mustafa Kılıç
 */
public class ProcessScreen extends javax.swing.JFrame {
    private boolean categoryFilterActive = false;
    
    DefaultTableModel model;
    Processes process = new Processes();  
    private static String username;
    
    CreditCardInfoScreen userInfoScreen = new CreditCardInfoScreen(username);
    LoginScreen screen = new LoginScreen();
           
    private User user;
    
    
    /**
     * Creates new form ScreenProcess
     */
    public ProcessScreen(String username) {
        initComponents();
        
        this.username = username;
        
        user = new User((username));
                
        addMouseListener(new java.awt.event.MouseAdapter() {
              public void mouseClicked(java.awt.event.MouseEvent evt) {
                  formMouseClicked(evt);
              }
          });
              
        
        category_area.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkboxItemStateChanged(evt);
            }
        });  // We use this just for showing categories.
       
        model = (DefaultTableModel)product_table.getModel(); // We assigned the table to the model.
    
        showProducts();
    }

    private void formMouseClicked(java.awt.event.MouseEvent evt) {                                   
        // We are checking if the click occurred outside of the table.
        if (!product_table.getBounds().contains(evt.getPoint())) {
            // If clicked outside the table, we remove the selection.
            product_table.clearSelection();
        } else {
            return;
        }
    }
    private void checkboxItemStateChanged(java.awt.event.ItemEvent evt) {                                          
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            String selectedCategory = category_area.getSelectedItem().toString();
            if(categoryFilterActive) {
                if (selectedCategory.equals("All")) {
                    product_table.setRowSorter(null);
                    categoryFilterActive = false;
                } else {
                    categoryFilterActive = true;
                    applyCategoryFilter(selectedCategory);
                }
            }
            else{
                product_table.setRowSorter(null);
            }
        }
    }
    private void applyCategoryFilter(String selectedCategory) {
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(model);
        product_table.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter("(?i)" + Pattern.quote(selectedCategory)));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        product_table = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        text_area = new javax.swing.JTextArea();
        buy_button = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        addFavorite_button = new javax.swing.JButton();
        personel_button = new javax.swing.JButton();
        cards_button = new javax.swing.JButton();
        message_area = new javax.swing.JLabel();
        category_area = new javax.swing.JComboBox<>();
        name_area = new javax.swing.JTextField();
        delete_button = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        favorites_button = new javax.swing.JButton();
        orders_button = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("samus e-commercial/processes");
        setBounds(new java.awt.Rectangle(300, 70, 0, 0));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 153, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(940, 629));

        product_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Color", "Category", "Stock", "Weight", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        product_table.setRowHeight(25);
        product_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                product_tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(product_table);
        if (product_table.getColumnModel().getColumnCount() > 0) {
            product_table.getColumnModel().getColumn(0).setResizable(false);
            product_table.getColumnModel().getColumn(1).setResizable(false);
            product_table.getColumnModel().getColumn(2).setResizable(false);
            product_table.getColumnModel().getColumn(3).setResizable(false);
            product_table.getColumnModel().getColumn(4).setResizable(false);
            product_table.getColumnModel().getColumn(4).setPreferredWidth(40);
            product_table.getColumnModel().getColumn(5).setResizable(false);
            product_table.getColumnModel().getColumn(5).setPreferredWidth(220);
        }

        text_area.setEditable(false);
        text_area.setColumns(20);
        text_area.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        text_area.setRows(5);
        text_area.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.black, null));
        jScrollPane1.setViewportView(text_area);

        buy_button.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        buy_button.setText("Buy");
        buy_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buy_buttonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Name :");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Category :");

        addFavorite_button.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        addFavorite_button.setText("Add to Favorites");
        addFavorite_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFavorite_buttonActionPerformed(evt);
            }
        });

        personel_button.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        personel_button.setText("My Personel Details");
        personel_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personel_buttonActionPerformed(evt);
            }
        });

        cards_button.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cards_button.setText("My Credit Cards");
        cards_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cards_buttonActionPerformed(evt);
            }
        });

        message_area.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        message_area.setForeground(java.awt.Color.red);

        category_area.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Book", "Clothing", "Cosmetics" }));
        category_area.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                category_areaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                category_areaMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                category_areaMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                category_areaMouseReleased(evt);
            }
        });
        category_area.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                category_areaActionPerformed(evt);
            }
        });

        name_area.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                name_areaKeyReleased(evt);
            }
        });

        delete_button.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        delete_button.setText("Delete from Favorites");
        delete_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_buttonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Wide Latin", 0, 26)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("SAMUS E-COMMERCIAL");
        jLabel3.setToolTipText("");

        favorites_button.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        favorites_button.setText("Show Favorites");
        favorites_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                favorites_buttonActionPerformed(evt);
            }
        });

        orders_button.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        orders_button.setText("Show My Orders");
        orders_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orders_buttonActionPerformed(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mustafa Kılıç\\Downloads\\aaaa (8).jpg")); // NOI18N
        jLabel4.setText("jLabel4");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 831, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(buy_button, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(delete_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addFavorite_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(category_area, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(name_area))
                                .addGap(94, 94, 94)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(favorites_button, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(orders_button, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 645, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(personel_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cards_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(message_area, javax.swing.GroupLayout.PREFERRED_SIZE, 831, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(57, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 940, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(personel_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cards_button))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(category_area, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(name_area, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(addFavorite_button, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(delete_button, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(buy_button, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(favorites_button, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(orders_button, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(message_area, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addGap(20, 20, 20))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 629, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void addFavorite_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFavorite_buttonActionPerformed
        
        text_area.setText("");        
        
        int selected_row = product_table.getSelectedRow();
        
        if(selected_row == -1) {
            if(model.getRowCount() == 0) {
                message_area.setText("Product Table Empty!");
            }
            else {
                message_area.setText("Please select a product!");
            }
        }
        else {
           
            String name = (String) product_table.getValueAt(selected_row, 0);
            String color = (String) product_table.getValueAt(selected_row, 1);
            String category = (String) product_table.getValueAt(selected_row, 2);
            int stock = (int) product_table.getValueAt(selected_row, 3);
            double weight = (double) product_table.getValueAt(selected_row, 4);
            String description = (String) product_table.getValueAt(selected_row, 5);            
            
            Product selected_product = new Product(name, color, category, stock, weight, description);
            
            if(process.addToFavorite(selected_product,username)) {
                user.addFavorites(selected_product,username);
                
                
                text_area.append( "     " + "New Favorite ==>    Name: [ " + selected_product.getProductName() + " ]  ,  Category: [ " + selected_product.getProductCategory() + " ]\n");
                message_area.setText("Favorite product successfully added.");       
            }
            else {
                message_area.setText("Favorite product already exist!");
            }
            

        }
        

    }//GEN-LAST:event_addFavorite_buttonActionPerformed

    private void buy_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buy_buttonActionPerformed
        
        text_area.setText("");        
        
        int selected_row = product_table.getSelectedRow();
        
        if(selected_row == -1) {
            if(model.getRowCount() == 0) {
                message_area.setText("Product Table Empty!");
            }
            else {
                message_area.setText("Please select a product!");
            }
        }
        else {
           
            String name = (String) product_table.getValueAt(selected_row, 0);
            String color = (String) product_table.getValueAt(selected_row, 1);
            String category = (String) product_table.getValueAt(selected_row, 2);
            int stock = (int) product_table.getValueAt(selected_row, 3);
            double weight = (double) product_table.getValueAt(selected_row, 4);
            String description = (String) product_table.getValueAt(selected_row, 5);            
            
            Product selected_product = new Product(name, color, category, stock, weight, description);
            
            if(process.addToOrders(selected_product,username)) {
                user.addOrdering(selected_product,username);
                
                
                text_area.append("      " + "New Order ==> Name: [ " + selected_product.getProductName() + "]      Category: [" + selected_product.getProductCategory() + "]\n");
                message_area.setText("Your order was succesfully received.");
                
                showProducts();
                
            }
            else {
                message_area.setText("Out of stock!");
            }
            

        }

    }//GEN-LAST:event_buy_buttonActionPerformed

    private void cards_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cards_buttonActionPerformed

        CreditCardInfoScreen creditCardInfoScreen = new CreditCardInfoScreen(username);
        
        creditCardInfoScreen.setVisible(true);
        
    }//GEN-LAST:event_cards_buttonActionPerformed

    private void personel_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personel_buttonActionPerformed
              
        UserInfoScreen userInfoScreen = new UserInfoScreen(username);
        
        userInfoScreen.setVisible(true);
        
        
    }//GEN-LAST:event_personel_buttonActionPerformed

    
    public void searchDynamic(String search) {
        
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(model);
        
        product_table.setRowSorter(tr);
        
        tr.setRowFilter(RowFilter.regexFilter("(?i)" + Pattern.quote(search)));
    }
    
    private void name_areaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_name_areaKeyReleased

        String search = new String (name_area.getText());
        
        searchDynamic(search);
    }//GEN-LAST:event_name_areaKeyReleased

    private void product_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_product_tableMouseClicked

        int selected_row = product_table.getSelectedRow();
        String category = (String) product_table.getValueAt(selected_row, 2);
        
        name_area.setText(model.getValueAt(selected_row, 0).toString());
        category_area.setSelectedItem(category);
        

    }//GEN-LAST:event_product_tableMouseClicked

    
   
    private void category_areaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_areaMouseReleased
   
    }//GEN-LAST:event_category_areaMouseReleased

    private void delete_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_buttonActionPerformed

        message_area.setText("");

        int selected_row = product_table.getSelectedRow();
        
        if(selected_row == -1) {
            if(model.getRowCount() == 0) {
                message_area.setText("Product Table Empty!");
            }
             else {
                message_area.setText("Please select a product!");
            }
        }
        else {
            String name = model.getValueAt(selected_row, 0).toString();
            
            process.deleteFav(name,username);
            
            process.showFavorites(username);
            
            message_area.setText("The favorite product deleted succesfully. ");
        }
        

    }//GEN-LAST:event_delete_buttonActionPerformed

    private void orders_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orders_buttonActionPerformed

        text_area.setText("");
        text_area.append(" --------------------------------------My  Orders---------------------------------------\n");

        ArrayList<Product> favorites = process.showOrdersInfo(username);

        int i = 1;

        for(Product p : favorites) {
            String info = "     " + i+ ".Order ==>    Name: [ " + p.getProductName() + " ]   ,  Category: [ " + p.getProductCategory() + " ]\n";
            text_area.append(info);
            i++;
        }
    }//GEN-LAST:event_orders_buttonActionPerformed

    private void favorites_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_favorites_buttonActionPerformed

        text_area.setText("");
        text_area.append(" --------------------------------------My Favorites-------------------------------------\n");

        ArrayList<Product> favorites = process.showFavorites(username);
        int i = 1;

        for(Product p : favorites) {
            String info = "     " + i + ".Favorite ==>    Name: [ " + p.getProductName() + " ]  ,  Category: [ " + p.getProductCategory() + " ]\n";
            text_area.append(info);
            i++;
        }

    }//GEN-LAST:event_favorites_buttonActionPerformed

    private void category_areaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_category_areaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_category_areaActionPerformed

    private void category_areaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_areaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_category_areaMouseClicked

    private void category_areaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_areaMousePressed

                 
    }//GEN-LAST:event_category_areaMousePressed

    private void category_areaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_areaMouseEntered

        categoryFilterActive = true;

    }//GEN-LAST:event_category_areaMouseEntered

    public void showProducts() {
        
        model.setRowCount(0); // Our table will start empty.
        
        ArrayList<Product> products = new ArrayList<>();
          
        products = process.showProductsInfo();
        
        if(products != null) {
            
            for(Product product : products) {
                Object[] add = {product.getProductName(), product.getProductColor(), product.getProductCategory(), product.getProductStokInformation(), product.getProductWeight(), product.getProductDescriptionInformation()};
           
                model.addRow(add);
                    
            }
        }
        
    }    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProcessScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProcessScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProcessScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProcessScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProcessScreen(username).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFavorite_button;
    private javax.swing.JButton buy_button;
    private javax.swing.JButton cards_button;
    private javax.swing.JComboBox<String> category_area;
    private javax.swing.JButton delete_button;
    private javax.swing.JButton favorites_button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel message_area;
    private javax.swing.JTextField name_area;
    private javax.swing.JButton orders_button;
    private javax.swing.JButton personel_button;
    private javax.swing.JTable product_table;
    private javax.swing.JTextArea text_area;
    // End of variables declaration//GEN-END:variables
}
